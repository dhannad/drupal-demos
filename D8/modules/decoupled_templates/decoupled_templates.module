<?php

/**
 * Implements hook_preprocess_block
 */
function decoupled_templates_preprocess_block(&$variables) {
  /* @var \Drupal\block_content\Entity\BlockContent $block_entity*/
  $block_entity = $variables['content']['#block_content'];
  if(_decoupled_templates_entity_is_decoupled($block_entity)){
    $decoupled_content = _decoupled_templates_get_decoupled_content($block_entity);
      $variables['content'] = [
        '#type' => 'inline_template',
        '#template' => $decoupled_content,
      ];
  }
}

/* @var \Drupal\Core\Entity\ContentEntityBase $entity*/
function _decoupled_templates_entity_is_decoupled($entity) {
  if($entity){
    $bundle = $entity->bundle();
    $decoupled_bundles = _decoupled_templates_get_bundles($entity->getEntityTypeId());

    return in_array($bundle, $decoupled_bundles);
  }
  return false;
}
//@TODO Make this configurable
function _decoupled_templates_get_bundles($entity_type){
  $decoupled_bundles = ['block_content' => ['basic']];
  return isset($decoupled_bundles[$entity_type]) ? $decoupled_bundles[$entity_type] : [];
}

//@TODO Abstract this to a service
/* @var \Drupal\Core\Entity\ContentEntityBase $entity*/
function _decoupled_templates_get_decoupled_content($entity){
  $client = \Drupal::httpClient();
  //@TODO Make this URL configurable
  $response = $client->request('GET', 'https://googlechrome.github.io/samples/fetch-api/users.html', [
    'query' => [
      'type' => $entity->bundle(),
      'fields' => _decoupled_templates_get_fields_string($entity),
    ]
  ]);
  //@TODO Make text format configurable
  return check_markup((string) $response->getBody(), 'restricted_html');
}

//@TODO There's probably a better way to do this.
/* @var \Drupal\Core\Entity\ContentEntityBase $entity*/
function _decoupled_templates_get_fields_string($entity){
  $fields = [];
  $entity_fields = $entity->getFields();
  foreach($entity_fields as $field_name => $field){
    $fields[$field_name] = $field->getValue();
  }
  return $fields;
}